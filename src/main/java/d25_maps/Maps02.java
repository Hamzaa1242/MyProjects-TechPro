package d25_maps;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class Maps02 {
    public static void main(String[] args) {

        HashMap<String, Integer> stdAges = new HashMap<>();
        stdAges.put("Ali", 18);
        stdAges.put("Can", 19);
        stdAges.put("Tom", 33);
        stdAges.put("Veli", 63);
        stdAges.put("Ahmet", 41);
        System.out.println(stdAges); // {Can=19, Ahmet=41, Tom=33, Veli=63, Ali=18}

        stdAges.put("Tom", 35);
        System.out.println(stdAges); // {Can=19, Ahmet=41, Tom=35, Veli=63, Ali=18}

        // 1) replace() methodu, valueâ€™lari keyâ€™leri kullanarak update etmeye yarar
        // AynÄ± iÅŸlemi put ile yapmak da teknik olarak iÅŸe yarar, ancak replace kullanmak,
        // kodunuzu okuyan diÄŸer geliÅŸtiricilere ve size daha net bilgi verir.

        stdAges.replace("Tom", 39);
        System.out.println(stdAges); // {Can=19, Ahmet=41, Tom=39, Veli=63, Ali=18}

        // 2) replace() methodu, eski deger kontrolu yaparak ta calisir

        stdAges.replace("Tom", 21, 45); // DeÄŸiÅŸiklik olmayacak Ã§Ã¼nkÃ¼ Tom'un deÄŸeri 21 deÄŸil 39
        System.out.println(stdAges); // {Can=19, Ahmet=41, Tom=39, Veli=63, Ali=18}

        stdAges.replace("Tom", 39, 45);
        System.out.println(stdAges); // {Can=19, Ahmet=41, Tom=45, Veli=63, Ali=18}

        // 3)putIfAbsent() metodu, belirtilen key ve value Ã§iftini, key Mapâ€™te yoksa Mapâ€™e ekler.
        // Key Mapâ€™te zaten varsa, metodun hiÃ§bir etkisi olmaz.

        stdAges.putIfAbsent("Tom", 77);
        System.out.println(stdAges); // {Can=19, Ahmet=41, Tom=45, Veli=63, Ali=18}
        // 77 Eklenmez Ã§Ã¼nkÃ¼ Tom map'te var

        stdAges.putIfAbsent("AyÅŸe", 23);
        System.out.println(stdAges); // {Can=19, Ahmet=41, AyÅŸe=23, Tom=45, Veli=63, Ali=18}
        // AyÅŸe map'te yoktu bu yÃ¼zden eklendi

        // 4- get() ve getOrDefault() methodâ€™lari eger aranan eleman mapâ€™te var ise, ikisi de ayni isi yapar
        // key verirsiniz, size value verir. Ancak getOrDefault() metodu, anahtar bulunamadÄ±ÄŸÄ±nda
        // bir varsayÄ±lan deÄŸer saÄŸlama avantajÄ±na sahiptir.

        System.out.println(stdAges.get("Tom")); // 45
        System.out.println(stdAges.getOrDefault("Tom", 18)); // 45
        // 45 Ã§Ã¼nkÃ¼ Tom map'te var ve value'su 45

        System.out.println(stdAges.get("Jerry")); // null // Jerry map'te yok, null dÃ¶ndÃ¼
        System.out.println(stdAges.getOrDefault("Jerry", 18)); // 18

        // 5) containsKey() metodu, Mapâ€™te bir key olup olmadÄ±ÄŸÄ±nÄ± kontrol eder.
        // containsValue() metodu ise, Mapâ€™te bir value olup olmadÄ±ÄŸÄ±nÄ± kontrol eder.
        // Boolean return ederler

        Boolean b = stdAges.containsValue(19);
        System.out.println(b); // true
        System.out.println(stdAges.containsValue(99)); // false

        System.out.println(stdAges.containsKey("TOM")); // false
        System.out.println(stdAges.containsKey("Tom")); // true

        // ---------- BÃ¼yÃ¼k kÃ¼Ã§Ã¼k harfe duyarsÄ±z yapma ----------

        Map<String, Integer> stdAges2 = new HashMap<>();
        stdAges2.put("Tom".toLowerCase(), 25);

        System.out.println(stdAges2); // {tom=25}

        boolean containsKeyInsensitive = stdAges2.containsKey("TOM".toLowerCase());
        System.out.println(containsKeyInsensitive); // true

        // --------------------
        String emoji = "\uD83E\uDD70";
        System.out.println("Emoji : " + emoji); // Emoji : ğŸ¥°
        // https://emojipedia.org/
        // --------------------
    }
}
